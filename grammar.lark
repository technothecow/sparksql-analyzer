?start : (select | create_database | create_table) _SEMICOLON _SEP? -> request

?create_table : "create"i _SEP "table"i

?create_database : "create"i _SEP ("database"i|"schema"i) _SEP ("IF NOT EXISTS" _SEP)? VARNAME comment_clause? location_clause? properties_clause?

comment_clause : _SEP "comment"i _SEP VALUE
location_clause : _SEP "location"i _SEP VALUE
properties_clause : _SEP "with"i _SEP "DBPROPERTIES"i _SEP? "("equality_pair ("," _SEP? equality_pair)*")"
equality_pair : _SEP? VARNAME _SEP? "=" _SEP? VALUE _SEP?

?select : ( "with"i _SEP with_query ("," _SEP? with_query)* _SEP )? select_statement (_SEP ("UNION"|"INTERSECT"|"EXCEPT") _SEP select_statement)* orderby_clause? sortby_clause? clusterby_clause? distributeby_clause? limit_clause?

orderby_clause : _SEP "order by"i _SEP orderby_item ("," _SEP? orderby_item)*
orderby_item : ITEM (_SEP ("ASC"i|"DESC"i))? (_SEP "NULLS"i _SEP ("FIRST"i|"LAST"i))?
sortby_clause : _SEP "sort by"i _SEP orderby_item ("," _SEP? orderby_item)*
clusterby_clause : _SEP "cluster by"i ITEMS
distributeby_clause : _SEP "distribute by"i ITEMS
limit_clause : _SEP "LIMIT"i _SEP ("ALL"i|VALUE)

?with_query : ITEM _SEP? "(" ITEM ")" _SEP "as"i _SEP "(" _SEP? select_statement _SEP? ")"
?select_statement : field_selection_clause _SEP from_clause where_clause? groupby_clause? having_clause?
field_selection_clause : "select"i (_SEP ("ALL"|"DISTINCT"))? _SEP FIELDS
from_clause : "from"i _SEP VARNAMES
where_clause : _SEP "where"i _SEP boolean_expression
groupby_clause : _SEP "group by"i _SEP ITEMS
having_clause : _SEP "where"i _SEP boolean_expression


boolean_expression : (logical_or _SEP?)+
?logical_or : logical_and (_SEP? "or"i _SEP? logical_and _SEP?)*
?logical_and : logical_equality (_SEP? "and"i _SEP? logical_equality _SEP?)*
?logical_equality : logical_comparison (_SEP? ("=" | "==" | "!=") _SEP? logical_comparison _SEP?)*
?logical_comparison : sum (_SEP? ("<=" | "<" | ">=" | ">") _SEP? sum _SEP?)*
?sum : product (_SEP?("+"|"-")_SEP? product _SEP?)*
?product : var (_SEP? ("*"|"/") _SEP? var _SEP?)*
?var :  _SEP? (VALUE | "(" _SEP? sum _SEP? ")") _SEP?

VARNAME : ("_" | ("a".."z") | ("A".."Z") | ("0".."9") | ".")+
VALUE : VARNAME | NUMBER | FUNCTION | "'"VARNAME"'"
VARNAMES : VARNAME ("," _SEP? VARNAME)*
ITEM : VARNAME | FUNCTION
POSITIVE_INT : ("0".."9")+
NUMBER : "-"? POSITIVE_INT
_SEMICOLON : ";"
EVERYTHING : "*"
_SEP : ("\n" | " ")+
ITEMS : ITEM ("," _SEP? ITEM)*
FUNCTION : VARNAME _SEP? "(" VARNAME ")"
FIELDS : EVERYTHING | (ITEM (_SEP "as"i _SEP ITEM)? ("," _SEP? ITEM (_SEP "as"i _SEP ITEM)?)*)